{"version":3,"file":"static/js/30.b7321180.chunk.js","mappings":"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","sources":["components/core/Button.tsx","components/core/Input.tsx","hooks/useInput.ts","pages/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\ninterface IProps {\n  onClick?: () => void;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  buttonType?: 'confirm' | 'cancel' | 'reset';\n}\n\ninterface IStyledProps {\n  $buttonType?: 'confirm' | 'cancel' | 'reset';\n}\n\nconst StyledButton = styled.button<IStyledProps>`\n  width: fit-content;\n  border: none;\n  border-radius: 0.25rem;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  transition: background-color 0.2s;\n\n  background-color: ${(props) => {\n    switch (props.$buttonType) {\n      case 'confirm':\n        return props.theme.green;\n      case 'cancel':\n        return props.theme.red;\n      case 'reset':\n        return props.theme.gray;\n      default:\n        return props.theme.primary;\n    }\n  }};\n\n  &:hover {\n    background-color: ${(props) => {\n      switch (props.$buttonType) {\n        case 'confirm':\n          return props.theme.greenHover;\n        case 'cancel':\n          return props.theme.redHover;\n        case 'reset':\n          return props.theme.grayHover;\n        default:\n          return props.theme.primaryHover;\n      }\n    }};\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button = ({ children, buttonType, ...props }: IProps) => {\n  return (\n    <StyledButton {...props} $buttonType={buttonType}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\ninterface IProps {\n  label?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onEnterKeyDown?: () => void;\n}\n\nconst Input = ({ label, onEnterKeyDown, ...props }: IProps) => {\n  // 엔터키 입력시 실행할 함수\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && onEnterKeyDown) {\n      onEnterKeyDown();\n    }\n  };\n\n  return (\n    <InputWrapper>\n      {label && <Label>{label}</Label>}\n      <StyledInput {...props} onKeyDown={handleKeyDown} />\n    </InputWrapper>\n  );\n};\n\nexport default Input;\n\nconst InputWrapper = styled.div``;\n\nconst Label = styled.label`\n  display: block;\n  color: ${(props) => props.theme.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid ${(props) => props.theme.form.border};\n  border-radius: 0.25rem;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  background-color: ${(props) => props.theme.componentBgColor};\n  color: ${(props) => props.theme.text.primary};\n\n  &:focus {\n    border-color: ${(props) => props.theme.primary};\n    box-shadow: 0 0 0 2px rgba(22, 119, 255, 0.2);\n    outline: none;\n  }\n`;\n","import { useState, ChangeEvent } from 'react';\n\ninterface IUseInput {\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  reset: () => void;\n  setData: (data: string) => void;\n}\n\n/** 인풋 커스텀훅 */\nconst useInput = (initialValue: string): IUseInput => {\n  const [value, setValue] = useState(initialValue);\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  }\n\n  const reset = () => {\n    setValue('');\n  }\n\n  const setData = (data: string) => {\n    setValue(data)\n  }\n\n  return { value, onChange, reset, setData };\n}\n\nexport default useInput","import styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\n\n// components\nimport Input from '@components/core/Input';\nimport Button from '@components/core/Button';\n\n// hooks\nimport useInput from '@hooks/useInput';\n\n/** 로그인 페이지 */\nconst LoginPage = () => {\n  const navigate = useNavigate();\n\n  const userID = useInput('');\n  const userPW = useInput('');\n\n  // 로그인\n  const handleLogin = () => {\n    const reqData = {};\n    console.log('로그인 시도');\n\n    // 로그인 성공시\n    navigate('/');\n  };\n\n  return (\n    <Container>\n      <div className=\"content-wrap\">\n        <div className=\"title\">\n          <h1>로그인</h1>\n        </div>\n        <div className=\"input-wrap\">\n          <Input label=\"아이디\" placeholder=\"ID\" value={userID.value} onChange={userID.onChange} />\n          <Input\n            label=\"비밀번호\"\n            placeholder=\"Password\"\n            value={userPW.value}\n            onChange={userPW.onChange}\n            onEnterKeyDown={handleLogin}\n          />\n        </div>\n        <Button onClick={handleLogin}>로그인</Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .title {\n    width: 100%;\n    color: ${(props) => props.theme.text.primary};\n  }\n\n  .content-wrap {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 1rem;\n    width: 400px;\n    background-color: ${(props) => props.theme.componentBgColor};\n    padding: 1rem;\n    border-radius: 0.25rem;\n  }\n\n  .input-wrap {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin-bottom: 1rem;\n  }\n`;\n"],"names":["StyledButton","styled","button","_templateObject","_taggedTemplateLiteral","props","$buttonType","theme","green","red","gray","primary","greenHover","redHover","grayHover","primaryHover","_ref","children","buttonType","_objectWithoutProperties","_excluded","_jsx","_objectSpread","label","onEnterKeyDown","_jsxs","InputWrapper","Label","StyledInput","onKeyDown","e","key","div","_templateObject2","text","input","_templateObject3","form","border","componentBgColor","initialValue","_useState","useState","_useState2","_slicedToArray","value","setValue","onChange","event","target","reset","setData","data","navigate","useNavigate","userID","useInput","userPW","handleLogin","console","log","Container","className","Input","placeholder","Button","onClick"],"sourceRoot":""}