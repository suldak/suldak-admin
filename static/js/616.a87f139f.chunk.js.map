{"version":3,"file":"static/js/616.a87f139f.chunk.js","mappings":"6JAkBA,IARqB,SAAHA,GAAkD,IAA5CC,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,SAC1C,OACEC,EAAAA,EAAAA,KAACC,EAAO,CAACC,UAAWJ,EAAUK,UAAWJ,EAASF,SAC/CA,GAGP,EAQA,IAAMI,EAAUG,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HAMtB,SAACC,GAAK,OACNA,EAAML,WAAS,kDAGhB,IAEC,SAACK,GAAK,OACNA,EAAMN,WAAS,kDAGhB,G,mEC5BGO,EAAYL,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HACN,SAACC,GAAK,OAAKA,EAAME,MAAMC,gBAAgB,IAE7C,SAACH,GAAK,OAAKA,EAAME,MAAME,SAAS,IAE/B,SAACJ,GAAK,OAAMA,EAAMK,YAAW,QAAAC,OAAWN,EAAMK,aAAgB,QAAQ,IAOvF,IAJY,SAAHjB,GAA0C,IAApCC,EAAQD,EAARC,SAAUkB,EAAUnB,EAAVmB,WACvB,OAAOf,EAAAA,EAAAA,KAACS,EAAS,CAACI,YAAaE,EAAWlB,SAAEA,GAC9C,C,mECVA,IAJc,SAAHD,GAA8B,IAAxBC,EAAQD,EAARC,SACf,OAAOG,EAAAA,EAAAA,KAACgB,EAAW,CAAAnB,SAAEA,GACvB,EAIA,IAAMmB,EAAcZ,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4FACnB,SAACC,GAAK,OAAKA,EAAME,MAAMO,KAAKC,OAAO,G,+CCbxCC,EACI,IADJA,EAEI,IA2BV,IAtBA,WACE,IAAAC,GAAoCC,EAAAA,EAAAA,UAAiBC,OAAOC,YAAWC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAhEM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAchC,OAZAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnBF,EAAcL,OAAOC,WACvB,EAIA,OAFAD,OAAOQ,iBAAiB,SAAUD,GAE3B,WACLP,OAAOS,oBAAoB,SAAUF,EACvC,CACF,GAAG,IAEI,CACL/B,SAAU4B,GAAcP,EACxBpB,SAAU2B,EAAaP,GAAgBO,GAAcP,EACrDa,UAAWN,EAAaP,EAE5B,C,2FCEA,UAnBsB,WACpB,IAAAc,GAA+BC,EAAAA,EAAAA,KAAvBnC,EAAQkC,EAARlC,SAAUD,EAAQmC,EAARnC,SAClB,OACEE,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAAtC,UACEuC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACtC,SAAUA,EAAUD,SAAUA,EAASD,SAAA,EACnDG,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACvB,WAAW,IAAGlB,UACjBG,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAAA1C,SAAC,cAETG,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACvB,WAAW,IAAGlB,UACjBG,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAAA1C,SAAC,cAETG,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACvB,WAAW,IAAGlB,UACjBG,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAAA1C,SAAC,iBAKjB,C","sources":["components/RowContainer.tsx","components/core/Box.tsx","components/core/Title.tsx","hooks/useResponsive.ts","pages/DashboardPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n  isMobile: boolean;\n  isTablet: boolean;\n}\n\n/** Row 컨테이너 컴포넌트 */\nconst RowContainer = ({ children, isMobile, isTablet }: IProps) => {\n  return (\n    <Wrapper $isMobile={isMobile} $isTablet={isTablet}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default RowContainer;\n\ninterface IWrapperProps {\n  $isTablet: boolean;\n  $isMobile: boolean;\n}\nconst Wrapper = styled.div<IWrapperProps>`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 2rem;\n  margin-bottom: 2rem;\n\n  ${(props) =>\n    props.$isTablet &&\n    `\n    grid-template-columns: repeat(8, 1fr);\n  `}\n\n  ${(props) =>\n    props.$isMobile &&\n    `\n    grid-template-columns: repeat(4, 1fr);\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n  gridColumn?: string;\n}\n\ninterface IStyledProps {\n  $gridColumn?: string;\n}\n\nconst StyledBox = styled.div<IStyledProps>`\n  background-color: ${(props) => props.theme.componentBgColor};\n  border-radius: 0.25rem;\n  box-shadow: ${(props) => props.theme.boxShadow};\n  padding: 1rem;\n  grid-column: ${(props) => (props.$gridColumn ? `span ${props.$gridColumn}` : 'span 1')};\n`;\n\nconst Box = ({ children, gridColumn }: IProps) => {\n  return <StyledBox $gridColumn={gridColumn}>{children}</StyledBox>;\n};\n\nexport default Box;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n}\n\n/** 컴포넌트 상단에 들어갈 타이틀 컴포넌트 */\nconst Title = ({ children }: IProps) => {\n  return <StyledTitle>{children}</StyledTitle>;\n};\n\nexport default Title;\n\nconst StyledTitle = styled.div`\n  color: ${(props) => props.theme.text.primary};\n  font-weight: 500;\n  font-size: 1.1rem;\n  margin-bottom: 1rem;\n`;\n","import { useState, useEffect } from 'react';\n\nconst sizes = {\n  mobile: 480,\n  tablet: 768,\n  desktop: 1024, // 이 값은 주로 디자인에 따라 다를 수 있습니다.\n};\n\n/** 반응형 커스텀훅 */\nfunction useResponsive() {\n  const [windowSize, setWindowSize] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return {\n    isMobile: windowSize <= sizes.mobile,\n    isTablet: windowSize > sizes.mobile && windowSize <= sizes.tablet,\n    isDesktop: windowSize > sizes.tablet,\n  };\n}\n\nexport default useResponsive;\n","import React, { Suspense } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport RowContainer from '@components/RowContainer';\nimport Box from '@components/core/Box';\nimport Title from '@components/core/Title';\n\n// hooks\nimport useResponsive from '@hooks/useResponsive';\n\n/** 메인 페이지 */\nconst DashboardPage = () => {\n  const { isTablet, isMobile } = useResponsive();\n  return (\n    <>\n      <RowContainer isTablet={isTablet} isMobile={isMobile}>\n        <Box gridColumn=\"3\">\n          <Title>span 3</Title>\n        </Box>\n        <Box gridColumn=\"6\">\n          <Title>span 6</Title>\n        </Box>\n        <Box gridColumn=\"3\">\n          <Title>span 3</Title>\n        </Box>\n      </RowContainer>\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["_ref","children","isMobile","isTablet","_jsx","Wrapper","$isMobile","$isTablet","styled","div","_templateObject","_taggedTemplateLiteral","props","StyledBox","theme","componentBgColor","boxShadow","$gridColumn","concat","gridColumn","StyledTitle","text","primary","sizes","_useState","useState","window","innerWidth","_useState2","_slicedToArray","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","isDesktop","_useResponsive","useResponsive","_Fragment","_jsxs","RowContainer","Box","Title"],"sourceRoot":""}