{"version":3,"file":"static/js/580.f4b6fc39.chunk.js","mappings":"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","sources":["components/RowContainer.tsx","components/core/Box.tsx","components/core/Breadcrumbs.tsx","components/core/ErrorFallback.tsx","components/core/Input.tsx","components/core/Pagination.tsx","components/core/Table.tsx","components/core/Title.tsx","hooks/useInput.ts","hooks/useResponsive.ts","hooks/useSearchFilter.ts","hooks/useToastify.ts","apis/services/TagApi.ts","hooks/useModal.ts","components/Tag/TagList.tsx","hooks/apis/Tag/useTagMutation.tsx","components/Tag/TagEdit.tsx","components/core/Dropdown.tsx","libs/getTagType.ts","components/Tag/TagAdd.tsx","pages/Tag/TagPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n  isMobile: boolean;\n  isTablet: boolean;\n}\n\n/** Row 컨테이너 컴포넌트 */\nconst RowContainer = ({ children, isMobile, isTablet }: IProps) => {\n  return (\n    <Wrapper $isMobile={isMobile} $isTablet={isTablet}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default RowContainer;\n\ninterface IWrapperProps {\n  $isTablet: boolean;\n  $isMobile: boolean;\n}\nconst Wrapper = styled.div<IWrapperProps>`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 2rem;\n  margin-bottom: 2rem;\n\n  ${(props) =>\n    props.$isTablet &&\n    `\n    grid-template-columns: repeat(8, 1fr);\n  `}\n\n  ${(props) =>\n    props.$isMobile &&\n    `\n    grid-template-columns: repeat(4, 1fr);\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n  gridColumn?: string;\n}\n\ninterface IStyledProps {\n  $gridColumn?: string;\n}\n\nconst StyledBox = styled.div<IStyledProps>`\n  background-color: ${(props) => props.theme.componentBgColor};\n  border-radius: 0.25rem;\n  box-shadow: ${(props) => props.theme.boxShadow};\n  padding: 1rem;\n  grid-column: ${(props) => (props.$gridColumn ? `span ${props.$gridColumn}` : 'span 1')};\n`;\n\nconst Box = ({ children, gridColumn }: IProps) => {\n  return <StyledBox $gridColumn={gridColumn}>{children}</StyledBox>;\n};\n\nexport default Box;\n","import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// Styled-components로 Breadcrumb 스타일 정의\nconst BreadcrumbContainer = styled.div`\n  padding: 8px 0;\n  margin-bottom: 1rem;\n`;\n\nconst BreadcrumbItem = styled(Link)`\n  margin-right: 8px;\n  text-decoration: none;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.text.secondary};\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &:last-child {\n    color: ${(props) => props.theme.text.primary};\n    pointer-events: none;\n  }\n`;\n\nconst BreadcrumbSeparator = styled.span`\n  margin-right: 8px;\n  color: ${(props) => props.theme.text.secondary};\n`;\n\n// Breadcrumb 컴포넌트 정의\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter((x) => x);\n\n  return (\n    <BreadcrumbContainer>\n      <BreadcrumbItem to=\"/\">Dashboard</BreadcrumbItem>\n      {pathnames.map((name, index) => {\n        const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n        const isLast = index === pathnames.length - 1;\n\n        return (\n          <React.Fragment key={name}>\n            <BreadcrumbSeparator>/</BreadcrumbSeparator>\n            <BreadcrumbItem to={routeTo} aria-current={isLast ? 'page' : undefined}>\n              {name}\n            </BreadcrumbItem>\n          </React.Fragment>\n        );\n      })}\n    </BreadcrumbContainer>\n  );\n};\n\nexport default Breadcrumbs;\n","import styled from 'styled-components';\n\ninterface IProps {\n  error: Error;\n  resetErrorBoundary: () => void;\n}\n\n/** 에러 발생시 보여줄 컴포넌트 */\nconst ErrorFallback = ({ error, resetErrorBoundary }: IProps) => {\n  return (\n    <FallbackWrapper>\n      <InfoText>잠시 후 다시 시도해주세요</InfoText>\n      <SubText>요청사항을 처리하는데 실패했습니다</SubText>\n      <RefreshButton onClick={resetErrorBoundary}>새로고침</RefreshButton>\n    </FallbackWrapper>\n  );\n};\n\nexport default ErrorFallback;\n\nconst FallbackWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst InfoText = styled.span`\n  color: ${(props) => props.theme.text.primary};\n  font-weight: 500;\n  font-size: 1.5rem;\n`;\n\nconst SubText = styled.span`\n  color: ${(props) => props.theme.text.secondary};\n  font-size: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst RefreshButton = styled.div`\n  width: fit-content;\n  border: none;\n  border-radius: 0.25rem;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  transition: background-color 0.2s;\n  background-color: ${(props) => props.theme.primary};\n`;\n","import styled from 'styled-components';\n\ninterface IProps {\n  label?: string;\n  placeholder?: string;\n  value?: string;\n  defaultValue?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onEnterKeyDown?: () => void;\n  disabled?: boolean;\n  type?: string;\n}\n\nconst Input = ({\n  label,\n  onEnterKeyDown,\n  value,\n  defaultValue,\n  disabled = false,\n  type = 'text',\n  ...props\n}: IProps) => {\n  // 엔터키 입력시 실행할 함수\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && onEnterKeyDown) {\n      onEnterKeyDown();\n    }\n  };\n\n  return (\n    <InputWrapper>\n      {label && <Label>{label}</Label>}\n      <StyledInput\n        {...props}\n        value={value}\n        defaultValue={defaultValue}\n        onKeyDown={handleKeyDown}\n        disabled={disabled}\n        type={type}\n      />\n    </InputWrapper>\n  );\n};\n\nexport default Input;\n\nconst InputWrapper = styled.div`\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  display: block;\n  color: ${(props) => props.theme.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid ${(props) => props.theme.form.border};\n  border-radius: 0.25rem;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  background-color: ${(props) => props.theme.componentBgColor};\n  color: ${(props) => props.theme.text.primary};\n\n  &:focus {\n    border-color: ${(props) => props.theme.primary};\n    box-shadow: 0 0 0 2px rgba(22, 119, 255, 0.2);\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\ninterface IProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\n/** 페이지네이션 */\nconst Pagination = ({ currentPage, totalPages, onPageChange }: IProps) => {\n  // 최대 페이지네이션 버튼 수\n  const maxPageButtons = 5;\n\n  // 페이지 범위 계산\n  let startPage = Math.max(currentPage - 2, 1);\n  let endPage = Math.min(startPage + maxPageButtons - 1, totalPages);\n\n  // startPage 조정 (endPage가 최대 페이지 수보다 작으면 startPage를 조정)\n  if (endPage - startPage + 1 < maxPageButtons) {\n    startPage = Math.max(endPage - maxPageButtons + 1, 1);\n  }\n\n  // 페이지 번호 배열 생성\n  const pageNumbers = Array.from(\n    { length: Math.min(endPage - startPage + 1, totalPages) },\n    (_, index) => startPage + index\n  );\n\n  if (totalPages === 0) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      {/* 처음 페이지로 이동 */}\n\n      <PaginationButton onClick={() => onPageChange(1)}>&lt;&lt;</PaginationButton>\n\n      {/* 이전 페이지로 이동 */}\n      {currentPage > 1 && (\n        <PaginationButton onClick={() => onPageChange(currentPage - 1)}>&lt;</PaginationButton>\n      )}\n\n      {/* 페이지 번호 버튼 */}\n      {pageNumbers.map((page) => (\n        <PaginationButton\n          key={page}\n          $active={currentPage === page}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </PaginationButton>\n      ))}\n\n      {/* 다음 페이지로 이동 */}\n      {currentPage < totalPages && (\n        <PaginationButton onClick={() => onPageChange(currentPage + 1)}>&gt;</PaginationButton>\n      )}\n\n      {/* 마지막 페이지로 이동 */}\n      <PaginationButton onClick={() => onPageChange(totalPages)}>&gt;&gt;</PaginationButton>\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 1rem 0 1rem;\n  gap: 0.5rem;\n`;\n\nconst PaginationButton = styled.button<{ $active?: boolean }>`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0.25rem;\n  border: 1px solid ${(props) => (props.$active ? props.theme.form.point : props.theme.form.border)};\n  background-color: transparent;\n  color: ${(props) => (props.$active ? '#FFFFFF' : props.theme.text.secondary)};\n  padding: 0.5rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.theme.text.primary};\n    background-color: ${(props) => props.theme.hoverColor};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport Pagination from '@components/core/Pagination';\n\nexport interface IColumn {\n  Header: string;\n  accessor: string | ((row: any) => JSX.Element);\n  width: string;\n  align?: 'left' | 'right' | 'center';\n}\n\ninterface IProps {\n  data: any[]; // 테이블 데이터\n  columns: IColumn[]; // 컬럼 데이터\n  rowsPerPage?: number; // 페이지당 보여줄 행 수\n}\n\n/** 테이블 컴포넌트 */\nconst Table = ({ data, columns, rowsPerPage = 1 }: IProps) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(Math.ceil(data.length / rowsPerPage));\n\n  // 페이지 변경시 실행\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  // 현재 페이지의 데이터를 계산\n  const currentTableData = data.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\n\n  useEffect(() => {\n    // 데이터가 변경되면 페이지 수를 다시 계산합니다.\n    setTotalPages(Math.ceil(data.length / rowsPerPage));\n    // 데이터 변경시 1페이지로 이동\n    setCurrentPage(1);\n  }, [data]); // data 배열이 변경될 때마다 이 효과를 다시 실행합니다.\n\n  return (\n    <>\n      <StyledTable>\n        <Thead>\n          <tr>\n            {columns.map((column, index) => (\n              <Th key={index} $width={column.width}>\n                {column.Header}\n              </Th>\n            ))}\n          </tr>\n        </Thead>\n        <Tbody>\n          {currentTableData.map((row, rowIndex) => (\n            <Tr key={rowIndex}>\n              {columns.map((column, columnIndex) => {\n                const cellData =\n                  typeof column.accessor === 'function'\n                    ? column.accessor(row)\n                    : row[column.accessor as string];\n                return (\n                  <Td key={columnIndex} $align={column.align}>\n                    {cellData}\n                  </Td>\n                );\n              })}\n            </Tr>\n          ))}\n        </Tbody>\n      </StyledTable>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handleChangePage}\n      />\n    </>\n  );\n};\n\nexport default Table;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-radius: 0.25rem;\n  overflow: hidden;\n  table-layout: fixed;\n`;\n\nconst Thead = styled.thead`\n  background-color: ${(props) => props.theme.form.tableHeaderBg};\n  color: #eff2f7;\n  font-weight: 500;\n  text-align: left;\n`;\n\nconst Th = styled.th<{ $width: string }>`\n  padding: 12px 15px;\n  width: ${({ $width }) => $width};\n`;\n\nconst Tbody = styled.tbody``;\n\nconst Tr = styled.tr`\n  color: ${(props) => props.theme.form.tableRow};\n  border-bottom: 1px solid ${(props) => props.theme.form.border};\n\n  &:hover {\n    /* cursor: pointer; */\n    background-color: ${(props) => props.theme.hoverColor};\n  }\n`;\n\nconst Td = styled.td<{ $align?: 'left' | 'right' | 'center' }>`\n  text-align: ${({ $align }) => $align || 'left'};\n  padding: 12px 15px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n}\n\n/** 컴포넌트 상단에 들어갈 타이틀 컴포넌트 */\nconst Title = ({ children }: IProps) => {\n  return <StyledTitle>{children}</StyledTitle>;\n};\n\nexport default Title;\n\nconst StyledTitle = styled.div`\n  color: ${(props) => props.theme.text.primary};\n  font-weight: 500;\n  font-size: 1.1rem;\n  margin-bottom: 1rem;\n`;\n","import { SetStateAction } from 'jotai';\nimport { useState, ChangeEvent } from 'react';\n\ninterface IUseInput {\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  reset: () => void;\n  setData: (data: string) => void;\n  setValue: React.Dispatch<SetStateAction<string>>\n}\n\n/** 인풋 커스텀훅 */\nconst useInput = (initialValue: string): IUseInput => {\n  const [value, setValue] = useState(initialValue);\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    console.log(value)\n  }\n\n  const reset = () => {\n    setValue('');\n  }\n\n  const setData = (data: string) => {\n    setValue(data)\n  }\n\n  return { value, onChange, reset, setData, setValue };\n}\n\nexport default useInput","import { useState, useEffect } from 'react';\n\nconst sizes = {\n  mobile: 480,\n  tablet: 768,\n  desktop: 1024, // 이 값은 주로 디자인에 따라 다를 수 있습니다.\n};\n\n/** 반응형 커스텀훅 */\nfunction useResponsive() {\n  const [windowSize, setWindowSize] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return {\n    isMobile: windowSize <= sizes.mobile,\n    isTablet: windowSize > sizes.mobile && windowSize <= sizes.tablet,\n    isDesktop: windowSize > sizes.tablet,\n  };\n}\n\nexport default useResponsive;\n","/** 검색 필터 커스텀훅 */\n// useSearchFilter.ts\nimport { useState, useEffect } from 'react';\n\ninterface Searchable {\n  [key: string]: any;\n}\n\n// 검색 가능한 아이템의 배열과 검색 키워드, 검색을 수행할 필드 이름을 인자로 받는 훅입니다.\nexport const useSearchFilter = <T extends Searchable>(\n  items: T[],\n  searchKeyword: string,\n  searchField: keyof T\n) => {\n  const [filteredItems, setFilteredItems] = useState<T[]>([]);\n\n  useEffect(() => {\n    if (!searchKeyword.trim()) {\n      setFilteredItems(items);\n    } else {\n      const keyword = searchKeyword.toLowerCase();\n      const filtered = items.filter(item => item[searchField].toLowerCase().includes(keyword));\n      setFilteredItems(filtered);\n    }\n  }, [items, searchKeyword, searchField]);\n\n  return filteredItems;\n};\n","import { toast } from 'react-toastify'\n\n/** 토스트 메시지 커스텀 훅 */\nconst useToastify = () => {\n  // 인포 토스트 메시지\n  const showInfoToastMessage = (message: string) => {\n    toast.info(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      closeOnClick: true,\n      pauseOnHover: true,\n      autoClose: 3000,\n    })\n  }\n\n  // 성공 토스트 메시지\n  const showSuccessToastMessage = (message: string) => {\n    toast.success(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      closeOnClick: true,\n      pauseOnHover: true,\n      autoClose: 3000,\n    })\n  }\n\n  // 경고 토스트 메시지\n  const showWarningToastMessage = (message: string) => {\n    toast.warn(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      closeOnClick: true,\n      pauseOnHover: true,\n      autoClose: 3000,\n    })\n  }\n\n  // 에러 토스트 메시지\n  const showErrorToastMessage = (message: string) => {\n    toast.error(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      closeOnClick: true,\n      pauseOnHover: true,\n      autoClose: 3000,\n    })\n  }\n\n  return { showInfoToastMessage, showSuccessToastMessage, showWarningToastMessage, showErrorToastMessage }\n}\n\nexport default useToastify;","import { axiosInstance } from \"@apis/interceptor\";\n\n// 태그 추가 타입\ninterface IAdd {\n  tagType: string; // endpoint url\n  id?: number; // prikey\n  name: string;\n}\n\n// 태그 삭제 타입\ninterface IDelete {\n  tagType: string;\n  priKey: number;\n}\n\n// 태그 조회\ninterface IGet {\n  tagType: string;\n}\n\n/** 태그 API */\nclass TagApi {\n\n  // 추가 및 수정 (id값이 있으면 수정)\n  add = async ({ tagType, id, name }: IAdd) => {\n    const { data } = await axiosInstance.post(`/api/admin/tag/add/${tagType}`, {\n      id: id ? id : null,\n      name\n    })\n\n    return data\n  }\n\n  // 삭제\n  delete = async ({ tagType, priKey }: IDelete) => {\n    const response = await axiosInstance.delete(`/api/admin/tag/del/${tagType}`, {\n      data: {\n        priKey\n      }\n    })\n\n    return response.data\n  }\n\n  // 조회\n  get = async ({ tagType }: IGet) => {\n    const { data } = await axiosInstance.get(`/api/tag/view/${tagType}`)\n    return data\n  }\n}\n\nexport default new TagApi()","import { useEffect } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { modalStateAtom } from \"@atoms/modalAtoms\";\n\ninterface IOpenProps {\n  title?: string;\n  content: React.ReactNode;\n  confirmText?: string;\n  onConfirm?: () => void;\n}\n\n/** 모달 커스텀훅 */\nconst useModal = () => {\n  const [, setModalState] = useAtom(modalStateAtom)\n\n  // 모달 열기\n  const openModal = ({ title, content, confirmText, onConfirm }: IOpenProps) => {\n    setModalState({ title: title, isOpen: true, content, confirmText: confirmText || '확인', onConfirm })\n  }\n\n  // 모달 닫기\n  const closeModal = () => {\n    setModalState({ isOpen: false, content: null, onConfirm: undefined })\n  }\n\n  return { openModal, closeModal }\n\n}\n\nexport default useModal;","import styled from 'styled-components';\nimport { useQuery } from 'react-query';\n\n// components\nimport Table from '@components/core/Table';\nimport Button from '@components/core/Button';\n\n// hooks\nimport { useSearchFilter } from '@hooks/useSearchFilter';\nimport { useDeleteTagMutation } from '@hooks/apis/Tag/useTagMutation';\nimport useModal from '@hooks/useModal';\n\n// apis\nimport TagApi from '@apis/services/TagApi';\n\n// types\nimport { IColumn } from '@components/core/Table';\n\ninterface IProps {\n  tagType: string;\n  searchKeyword?: string;\n  selecteTag: (row: any) => void;\n}\n\n/** 태그 목록 컴포넌트 */\nconst TagList = ({ tagType, searchKeyword = '', selecteTag }: IProps) => {\n  const { openModal } = useModal();\n  const { data: tagList } = useQuery(['tagList', tagType], () => TagApi.get({ tagType }), {\n    suspense: true,\n    useErrorBoundary: true,\n    retry: false,\n    refetchOnWindowFocus: false,\n  });\n  const filteredData = useSearchFilter(tagList?.data || [], searchKeyword, 'name');\n\n  // 태그 삭제\n  const { mutate: deleteTag } = useDeleteTagMutation();\n\n  // 태그 삭제 확인 모달 열기\n  const handleOpenDeleteModal = (priKey: number) => {\n    openModal({\n      content: <div>태그를 삭제하시겠습니까?</div>,\n      onConfirm: () => handleDeleteTag(priKey),\n    });\n  };\n\n  // 태그 삭제 함수\n  const handleDeleteTag = (priKey: number) => {\n    deleteTag({\n      tagType: tagType,\n      priKey: priKey,\n    });\n  };\n\n  // 테이블 컬럼\n  const columns: IColumn[] = [\n    {\n      Header: '아이디',\n      accessor: 'id',\n      width: '20%',\n    },\n    {\n      Header: '태그명',\n      accessor: 'name',\n      width: '40%',\n    },\n    {\n      Header: '',\n      accessor: (row: any) => (\n        // JSX를 반환하는 함수를 제공할 수 있습니다.\n        <ButtonWrap>\n          <Button onClick={() => selecteTag(row)}>수정</Button>\n          <Button onClick={() => handleOpenDeleteModal(row.id)} buttonType=\"cancel\">\n            삭제\n          </Button>\n        </ButtonWrap>\n      ),\n      width: '40%',\n      align: 'right',\n    },\n  ];\n\n  return (\n    <>\n      <div>{tagList && <Table data={filteredData} columns={columns} />}</div>\n    </>\n  );\n};\n\nexport default TagList;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 1rem;\n`;\n","import { useMutation, useQueryClient } from 'react-query';\n\nimport useToastify from '@hooks/useToastify';\n\nimport TagApi from '@apis/services/TagApi';\n\n/** 태그 추가 */\nexport const useAddTagMutation = () => {\n  const queryClient = useQueryClient();\n  const { showSuccessToastMessage, showErrorToastMessage } = useToastify();\n\n  return useMutation(TagApi.add, {\n    onSuccess: () => {\n      showSuccessToastMessage('태그가 추가되었습니다.');\n      queryClient.invalidateQueries({ queryKey: ['tagList'] });\n    },\n    onError: () => {\n      showErrorToastMessage('태그 추가를 실패했습니다.');\n    },\n  });\n};\n\n/** 태그 수정 */\nexport const useEditTagMutation = () => {\n  const queryClient = useQueryClient();\n  const { showSuccessToastMessage, showErrorToastMessage } = useToastify();\n\n  return useMutation(TagApi.add, {\n    onSuccess: () => {\n      showSuccessToastMessage('태그 정보가 수정되었습니다.');\n      // 태그 정보가 수정되면 태그 리스트를 재호출\n      queryClient.invalidateQueries({ queryKey: ['tagList'] });\n    },\n    onError: () => {\n      showErrorToastMessage('태그 정보 수정을 실패했습니다.');\n    },\n  });\n};\n\n/** 태그 삭제 */\nexport const useDeleteTagMutation = () => {\n  const queryClient = useQueryClient();\n  const { showSuccessToastMessage, showErrorToastMessage } = useToastify();\n\n  return useMutation(TagApi.delete, {\n    onSuccess: () => {\n      showSuccessToastMessage('태그가 삭제되었습니다.');\n      // 태그 정보가 수정되면 태그 리스트를 재호출\n      queryClient.invalidateQueries({ queryKey: ['tagList'] });\n    },\n    onError: () => {\n      showErrorToastMessage('태그 삭제를 실패했습니다.');\n    },\n  });\n};\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport Input from '@components/core/Input';\nimport Button from '@components/core/Button';\n\n// hooks\nimport useModal from '@hooks/useModal';\nimport useInput from '@hooks/useInput';\nimport { useEditTagMutation } from '@hooks/apis/Tag/useTagMutation';\n\ninterface IProps {\n  tagType: string;\n  selectedTag?: any;\n}\n\n/** 태그 수정 컴포넌트 */\nconst TagEdit = ({ tagType, selectedTag }: IProps) => {\n  const tagName = useInput('');\n  const { openModal } = useModal();\n  const { mutate: tagEdit } = useEditTagMutation();\n\n  // 태그 수정 확인 모달 열기\n  const handleOpenEditModal = () => {\n    openModal({\n      content: <div>태그를 수정하시겠습니까?</div>,\n      onConfirm: handleAddEditTag,\n    });\n  };\n\n  // 폼 추가 및 수정\n  const handleAddEditTag = () => {\n    tagEdit({\n      tagType: tagType,\n      name: tagName.value,\n      id: selectedTag.id ? selectedTag.id : null,\n    });\n  };\n\n  // 선택된 태그가 변경될시 초기 인풋 설정\n  useEffect(() => {\n    tagName.setData(selectedTag?.name || '');\n  }, [selectedTag]);\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <Input value={tagName.value} onChange={tagName.onChange} label=\"태그명\" />\n      </InputWrapper>\n      <ButtonWrapper>\n        {selectedTag && <Button onClick={handleOpenEditModal}>수정</Button>}\n      </ButtonWrapper>\n    </Wrapper>\n  );\n};\n\nexport default TagEdit;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst ButtonWrapper = styled.div`\n  text-align: right;\n  width: 100%;\n`;\n","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { BsFillTriangleFill } from 'react-icons/bs';\n\ninterface Option {\n  value: string;\n  label: string;\n}\n\ninterface DropdownProps {\n  options: Option[];\n  onSelect: (selected: Option) => void;\n  placeholder?: string;\n}\n\n/** 드롭다운 컴포넌트 */\nconst Dropdown = ({ options, onSelect, placeholder = 'Select...' }: DropdownProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<Option | null>(null);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (option: Option) => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    onSelect(option);\n  };\n\n  return (\n    <DropdownWrapper>\n      <DropdownHeader onClick={handleToggle}>\n        {selectedOption ? selectedOption.label : placeholder}\n        <Arrow $isOpen={isOpen} /> {/* This is a down arrow unicode character */}\n      </DropdownHeader>\n      {isOpen && (\n        <DropdownList>\n          {options.map((option) => (\n            <DropdownListItem key={option.value} onClick={() => handleSelect(option)}>\n              {option.label}\n            </DropdownListItem>\n          ))}\n        </DropdownList>\n      )}\n    </DropdownWrapper>\n  );\n};\n\nexport default Dropdown;\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  width: 200px;\n`;\n\nconst DropdownHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 2.5rem;\n  padding: 0.5rem 0.75rem;\n  background-color: ${(props) => props.theme.componentBgColor};\n  border: 1px solid ${(props) => props.theme.form.border};\n  border-radius: 0.25rem;\n  color: ${(props) => props.theme.text.secondary};\n  cursor: pointer;\n`;\n\nconst Arrow = styled(BsFillTriangleFill)<{ $isOpen: boolean }>`\n  transform: ${({ $isOpen }) => ($isOpen ? 'rotate(0deg)' : 'rotate(180deg)')};\n  transition: transform 0.3s ease-in-out;\n  font-size: 0.5rem;\n`;\n\nconst DropdownList = styled.ul`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  background-color: ${(props) => props.theme.componentBgColor};\n  border: 1px solid ${(props) => props.theme.form.border};\n  color: ${(props) => props.theme.text.secondary};\n  border-radius: 0.25rem;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n`;\n\nconst DropdownListItem = styled.li`\n  padding: 0.5rem 0.75rem;\n  height: 2.5rem;\n  cursor: pointer;\n  &:hover {\n    background-color: ${(props) => props.theme.hoverColor};\n  }\n`;\n","export const getTagType = (type: string) => {\n  switch (type) {\n    case '주량':\n      return 'drinking-capacity'\n    case '도수':\n      return 'liquor-abv'\n    case '2차분류':\n      return 'liquor-detail'\n    case '재료':\n      return 'liquor-material'\n    case '1차분류':\n      return 'liquor-name'\n    case '판매처':\n      return 'liquor-sell'\n    case '추천안주':\n      return 'liquor-snack'\n    case '상태':\n      return 'state-type'\n    case '맛':\n      return 'taste-type'\n    default:\n      return 'drinking-capacity';\n  }\n}\n\nexport const TagTypes = [\n  {\n    value: 'drinking-capacity', label: '주량',\n  },\n  {\n    value: 'liquor-abv', label: '도수'\n  },\n  {\n    value: 'liquor-name', label: '1차분류'\n  },\n  {\n    value: 'liquor-detail', label: '2차분류'\n  },\n  {\n    value: 'liquor-material', label: '재료'\n  },\n  {\n    value: 'liquor-sell', label: '판매처'\n  },\n  {\n    value: 'liquor-snack', label: '추천안주'\n  },\n  {\n    value: 'state-type', label: '상태'\n  },\n  {\n    value: 'taste-type', label: '맛'\n  }\n]","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport Input from '@components/core/Input';\nimport Dropdown from '@components/core/Dropdown';\nimport Button from '@components/core/Button';\n\n// utils\nimport { TagTypes } from '@libs/getTagType';\n\n// hooks\nimport useInput from '@hooks/useInput';\nimport useModal from '@hooks/useModal';\nimport { useAddTagMutation } from '@hooks/apis/Tag/useTagMutation';\n\ninterface IProps {}\n\n/** 태그 추가 컴포넌트 */\nconst TagAdd = ({}: IProps) => {\n  const tagName = useInput('');\n  const { closeModal } = useModal();\n  const { mutate: addTag } = useAddTagMutation();\n\n  const [tagType, setTagType] = useState<string>('drinking-capacity');\n\n  // 태그 목록 타입 선택 함수\n  const handleSelectType = (selected: { value: string; label: string }) => {\n    setTagType(selected.value);\n  };\n\n  // 태그 추가\n  const handleAddTag = () => {\n    addTag({\n      tagType: tagType,\n      name: tagName.value,\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Wrapper>\n      <FormWrapper>\n        <Dropdown options={TagTypes} onSelect={handleSelectType} placeholder=\"주량\" />\n        <Input label=\"태그명\" value={tagName.value} onChange={tagName.onChange} />\n\n        <ButtonWrapper>\n          <Button onClick={handleAddTag}>추가</Button>\n          <Button onClick={closeModal} buttonType=\"reset\">\n            취소\n          </Button>\n        </ButtonWrapper>\n      </FormWrapper>\n    </Wrapper>\n  );\n};\n\nexport default TagAdd;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n`;\n","import { Suspense, useState } from 'react';\nimport styled from 'styled-components';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useQueryErrorResetBoundary } from 'react-query';\n\n// components\nimport ErrorFallback from '@components/core/ErrorFallback';\nimport RowContainer from '@components/RowContainer';\nimport TagList from '@components/Tag/TagList';\nimport TagEdit from '@components/Tag/TagEdit';\nimport TagAdd from '@components/Tag/TagAdd';\nimport Button from '@components/core/Button';\nimport Box from '@components/core/Box';\nimport Title from '@components/core/Title';\nimport Input from '@components/core/Input';\nimport Loader from '@components/core/Loader';\nimport Dropdown from '@components/core/Dropdown';\nimport Breadcrumbs from '@components/core/Breadcrumbs';\n\n// hooks\nimport useResponsive from '@hooks/useResponsive';\nimport useInput from '@hooks/useInput';\nimport useModal from '@hooks/useModal';\n\n// utils\nimport { TagTypes } from '@libs/getTagType';\n\n/** 태그 추가 페이지 */\nconst TagPage = () => {\n  const { reset } = useQueryErrorResetBoundary();\n  const { isTablet, isMobile } = useResponsive();\n  const searchInput = useInput('');\n  const { openModal } = useModal();\n\n  // 목록 태그 상태\n  const [tagType, setTagType] = useState<string>('drinking-capacity');\n  const [selectedTag, setSelectedTag] = useState<any>();\n\n  // 태그 목록 타입 선택 함수\n  const handleSelectType = (selected: { value: string; label: string }) => {\n    setTagType(selected.value);\n    setSelectedTag(null);\n  };\n\n  // 태그 목록 선택 함수\n  const handleSelectTag = (tag: any) => {\n    setSelectedTag(tag);\n  };\n\n  // 태그 추가 모달 열기\n  const handleOpenAddModal = () => {\n    openModal({\n      title: '태그 추가',\n      content: <TagAdd />,\n    });\n  };\n\n  return (\n    <>\n      <Breadcrumbs />\n      <RowContainer isTablet={isTablet} isMobile={isMobile}>\n        {/* 태그 목록 테이블 */}\n        <Box gridColumn=\"9\">\n          <TitleWrap>\n            <Title>태그 목록</Title>\n            <Button onClick={handleOpenAddModal}>태그 추가 +</Button>\n          </TitleWrap>\n\n          <FormWrap>\n            <Dropdown options={TagTypes} onSelect={handleSelectType} placeholder=\"주량\" />\n            <Input placeholder=\"검색어를 입력해주세요...\" onChange={searchInput.onChange} />\n          </FormWrap>\n\n          <ErrorBoundary fallbackRender={ErrorFallback} onReset={reset}>\n            <Suspense fallback={<Loader />}>\n              <TagList\n                tagType={tagType}\n                searchKeyword={searchInput.value}\n                selecteTag={handleSelectTag}\n              />\n            </Suspense>\n          </ErrorBoundary>\n        </Box>\n\n        {/* 태그 수정 폼 */}\n        <Box gridColumn=\"3\">\n          <TagEdit tagType={tagType} selectedTag={selectedTag} />\n          {/* <TagAdd tagName={tagAddName.value} onChangeTagName={tagAddName.onChange} /> */}\n        </Box>\n      </RowContainer>\n    </>\n  );\n};\n\nexport default TagPage;\n\nconst TitleWrap = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst FormWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n"],"names":["_ref","children","isMobile","isTablet","_jsx","Wrapper","$isMobile","$isTablet","styled","div","_templateObject","_taggedTemplateLiteral","props","StyledBox","theme","componentBgColor","boxShadow","$gridColumn","concat","gridColumn","BreadcrumbContainer","BreadcrumbItem","Link","_templateObject2","text","secondary","primary","BreadcrumbSeparator","span","_templateObject3","pathnames","useLocation","pathname","split","filter","x","_jsxs","to","map","name","index","routeTo","slice","join","isLast","length","React","undefined","error","resetErrorBoundary","FallbackWrapper","InfoText","SubText","RefreshButton","onClick","_templateObject4","label","onEnterKeyDown","value","defaultValue","_ref$disabled","disabled","_ref$type","type","_objectWithoutProperties","_excluded","InputWrapper","Label","StyledInput","_objectSpread","onKeyDown","e","key","input","form","border","currentPage","totalPages","onPageChange","startPage","Math","max","endPage","min","pageNumbers","Array","from","_","PaginationButton","page","$active","button","point","hoverColor","data","columns","_ref$rowsPerPage","rowsPerPage","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","ceil","_useState4","setTotalPages","currentTableData","useEffect","_Fragment","StyledTable","Thead","column","Th","$width","width","Header","Tbody","row","rowIndex","Tr","columnIndex","cellData","accessor","Td","$align","align","Pagination","table","thead","tableHeaderBg","th","_ref2","tbody","tr","_templateObject5","tableRow","td","_templateObject6","_ref3","StyledTitle","initialValue","setValue","onChange","event","target","console","log","reset","setData","sizes","window","innerWidth","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","isDesktop","useSearchFilter","items","searchKeyword","searchField","filteredItems","setFilteredItems","trim","keyword","toLowerCase","filtered","item","includes","showInfoToastMessage","message","toast","info","position","POSITION","TOP_RIGHT","closeOnClick","pauseOnHover","autoClose","showSuccessToastMessage","success","showWarningToastMessage","warn","showErrorToastMessage","TagApi","_createClass","_classCallCheck","add","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tagType","id","_yield$axiosInstance$","wrap","_context","prev","next","axiosInstance","post","sent","abrupt","stop","_x","apply","arguments","delete","_ref4","_callee2","priKey","response","_context2","_x2","get","_ref6","_callee3","_ref5","_yield$axiosInstance$2","_context3","_x3","_useAtom","useAtom","modalStateAtom","setModalState","openModal","title","content","confirmText","onConfirm","isOpen","closeModal","_ref$searchKeyword","selecteTag","useModal","tagList","useQuery","suspense","useErrorBoundary","retry","refetchOnWindowFocus","filteredData","deleteTag","queryClient","useQueryClient","_useToastify3","useToastify","useMutation","onSuccess","invalidateQueries","queryKey","onError","useDeleteTagMutation","mutate","handleDeleteTag","ButtonWrap","Button","buttonType","Table","selectedTag","tagName","useInput","tagEdit","_useToastify2","useEditTagMutation","handleAddEditTag","Input","ButtonWrapper","options","onSelect","_ref$placeholder","placeholder","setIsOpen","selectedOption","setSelectedOption","DropdownWrapper","DropdownHeader","Arrow","$isOpen","DropdownList","option","DropdownListItem","handleSelect","BsFillTriangleFill","ul","li","TagTypes","_objectDestructuringEmpty","addTag","_useToastify","useAddTagMutation","setTagType","FormWrapper","Dropdown","selected","useQueryErrorResetBoundary","_useResponsive","useResponsive","searchInput","setSelectedTag","Breadcrumbs","RowContainer","Box","TitleWrap","Title","TagAdd","FormWrap","ErrorBoundary","fallbackRender","ErrorFallback","onReset","Suspense","fallback","Loader","TagList","tag","TagEdit"],"sourceRoot":""}