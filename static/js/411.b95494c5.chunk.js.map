{"version":3,"file":"static/js/411.b95494c5.chunk.js","mappings":"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","sources":["components/RowContainer.tsx","components/core/Box.tsx","components/core/Input.tsx","components/core/Title.tsx","hooks/useInput.ts","hooks/useResponsive.ts","components/core/Tag.tsx","pages/TestPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n  isMobile: boolean;\n  isTablet: boolean;\n}\n\n/** Row 컨테이너 컴포넌트 */\nconst RowContainer = ({ children, isMobile, isTablet }: IProps) => {\n  return (\n    <Wrapper $isMobile={isMobile} $isTablet={isTablet}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default RowContainer;\n\ninterface IWrapperProps {\n  $isTablet: boolean;\n  $isMobile: boolean;\n}\nconst Wrapper = styled.div<IWrapperProps>`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 2rem;\n  margin-bottom: 2rem;\n\n  ${(props) =>\n    props.$isTablet &&\n    `\n    grid-template-columns: repeat(8, 1fr);\n  `}\n\n  ${(props) =>\n    props.$isMobile &&\n    `\n    grid-template-columns: repeat(4, 1fr);\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n  gridColumn?: string;\n}\n\ninterface IStyledProps {\n  $gridColumn?: string;\n}\n\nconst StyledBox = styled.div<IStyledProps>`\n  background-color: ${(props) => props.theme.componentBgColor};\n  border-radius: 0.25rem;\n  box-shadow: ${(props) => props.theme.boxShadow};\n  padding: 1rem;\n  grid-column: ${(props) => (props.$gridColumn ? `span ${props.$gridColumn}` : 'span 1')};\n`;\n\nconst Box = ({ children, gridColumn }: IProps) => {\n  return <StyledBox $gridColumn={gridColumn}>{children}</StyledBox>;\n};\n\nexport default Box;\n","import styled from 'styled-components';\n\ninterface IProps {\n  label?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onEnterKeyDown?: () => void;\n}\n\nconst Input = ({ label, onEnterKeyDown, ...props }: IProps) => {\n  // 엔터키 입력시 실행할 함수\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && onEnterKeyDown) {\n      onEnterKeyDown();\n    }\n  };\n\n  return (\n    <InputWrapper>\n      {label && <Label>{label}</Label>}\n      <StyledInput {...props} onKeyDown={handleKeyDown} />\n    </InputWrapper>\n  );\n};\n\nexport default Input;\n\nconst InputWrapper = styled.div``;\n\nconst Label = styled.label`\n  display: block;\n  color: ${(props) => props.theme.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid ${(props) => props.theme.form.border};\n  border-radius: 0.25rem;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  background-color: ${(props) => props.theme.componentBgColor};\n  color: ${(props) => props.theme.text.primary};\n\n  &:focus {\n    border-color: ${(props) => props.theme.primary};\n    box-shadow: 0 0 0 2px rgba(22, 119, 255, 0.2);\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n}\n\n/** 컴포넌트 상단에 들어갈 타이틀 컴포넌트 */\nconst Title = ({ children }: IProps) => {\n  return <StyledTitle>{children}</StyledTitle>;\n};\n\nexport default Title;\n\nconst StyledTitle = styled.div`\n  color: ${(props) => props.theme.text.primary};\n  font-weight: 500;\n  margin-bottom: 1rem;\n`;\n","import { useState, ChangeEvent } from 'react';\n\ninterface IUseInput {\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  reset: () => void;\n  setData: (data: string) => void;\n}\n\n/** 인풋 커스텀훅 */\nconst useInput = (initialValue: string): IUseInput => {\n  const [value, setValue] = useState(initialValue);\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  }\n\n  const reset = () => {\n    setValue('');\n  }\n\n  const setData = (data: string) => {\n    setValue(data)\n  }\n\n  return { value, onChange, reset, setData };\n}\n\nexport default useInput","import { useState, useEffect } from 'react';\n\nconst sizes = {\n  mobile: 480,\n  tablet: 768,\n  desktop: 1024, // 이 값은 주로 디자인에 따라 다를 수 있습니다.\n};\n\n/** 반응형 커스텀훅 */\nfunction useResponsive() {\n  const [windowSize, setWindowSize] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return {\n    isMobile: windowSize <= sizes.mobile,\n    isTablet: windowSize > sizes.mobile && windowSize <= sizes.tablet,\n    isDesktop: windowSize > sizes.tablet,\n  };\n}\n\nexport default useResponsive;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  children?: React.ReactNode;\n}\n\n/** 태그 컴포넌트 */\nconst Tag = ({ children }: IProps) => {\n  return <StyledTag>{children}</StyledTag>;\n};\n\nexport default Tag;\n\nconst StyledTag = styled.div`\n  width: fit-content;\n  color: white;\n  border-radius: 0.25rem;\n  padding: 0 0.5rem;\n  background-color: ${(props) => props.theme.yellow};\n`;\n","import styled from 'styled-components';\n\n// components\nimport RowContainer from '@components/RowContainer';\nimport Box from '@components/core/Box';\nimport Loader from '@components/core/Loader';\nimport NotFound from '@components/core/NotFound';\nimport Title from '@components/core/Title';\nimport Button from '@components/core/Button';\nimport Input from '@components/core/Input';\nimport Tag from '@components/core/Tag';\n\n// hooks\nimport useResponsive from '@hooks/useResponsive';\nimport useInput from '@hooks/useInput';\n\n/** 테스트 페이지 */\nconst TestPage = () => {\n  const { isTablet, isMobile } = useResponsive();\n  const testInput = useInput('');\n  const testLabelInput = useInput('');\n\n  return (\n    <>\n      <RowContainer isTablet={isTablet} isMobile={isMobile}>\n        {/* 로딩 애니메이션 */}\n        <Box gridColumn=\"3\">\n          <Title>로딩 애니메이션</Title>\n          <Loader />\n        </Box>\n        {/* 404 애니메이션 */}\n        <Box gridColumn=\"3\">\n          <Title>404 에러 애니메이션</Title>\n          <NotFound width={200} height={200} />\n        </Box>\n        {/* 버튼 컴포넌트 */}\n        <Box gridColumn=\"3\">\n          <Title>버튼 컴포넌트</Title>\n          <ButtonWrap>\n            <div className=\"btn-flex\">\n              <Button>Button</Button>\n              <span>Primary Button</span>\n            </div>\n            <div className=\"btn-flex\">\n              <Button buttonType=\"confirm\">Button</Button>\n              <span>Confirm Button</span>\n            </div>\n            <div className=\"btn-flex\">\n              <Button buttonType=\"cancel\">Button</Button>\n              <span>Cancel Button</span>\n            </div>\n            <div className=\"btn-flex\">\n              <Button buttonType=\"reset\">Button</Button>\n              <span>Reset Button</span>\n            </div>\n          </ButtonWrap>\n        </Box>\n        {/* 인풋 컴포넌트 */}\n        <Box gridColumn=\"3\">\n          <Title>인풋 컴포넌트</Title>\n          <InputWrap>\n            <Input\n              placeholder=\"None label input\"\n              value={testInput.value}\n              onChange={testInput.onChange}\n            />\n            <Input\n              label=\"Name\"\n              placeholder=\"With label input\"\n              value={testLabelInput.value}\n              onChange={testLabelInput.onChange}\n            />\n          </InputWrap>\n        </Box>\n      </RowContainer>\n\n      <RowContainer isTablet={isTablet} isMobile={isMobile}>\n        <Box gridColumn=\"3\">\n          <Title>태그 컴포넌트</Title>\n          <TagWrap>\n            <Tag>0 ~ 15%</Tag>\n            <Tag>16 ~ 20%</Tag>\n            <Tag>21 ~ 26%</Tag>\n          </TagWrap>\n        </Box>\n      </RowContainer>\n    </>\n  );\n};\n\nexport default TestPage;\n\n// 버튼\nconst ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  .btn-flex {\n    display: flex;\n    align-items: center;\n    color: ${(props) => props.theme.text.primary};\n    gap: 1rem;\n  }\n`;\n\n// 인풋\nconst InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\n// 태그\nconst TagWrap = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n"],"names":["_ref","children","isMobile","isTablet","_jsx","Wrapper","$isMobile","$isTablet","styled","div","_templateObject","_taggedTemplateLiteral","props","StyledBox","theme","componentBgColor","boxShadow","$gridColumn","concat","gridColumn","label","onEnterKeyDown","_objectWithoutProperties","_excluded","_jsxs","InputWrapper","Label","StyledInput","_objectSpread","onKeyDown","e","key","_templateObject2","text","primary","input","_templateObject3","form","border","StyledTitle","initialValue","_useState","useState","_useState2","_slicedToArray","value","setValue","onChange","event","target","reset","setData","data","sizes","window","innerWidth","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","isDesktop","StyledTag","yellow","_useResponsive","useResponsive","testInput","useInput","testLabelInput","_Fragment","RowContainer","Box","Title","Loader","NotFound","width","height","ButtonWrap","className","Button","buttonType","InputWrap","Input","placeholder","TagWrap","Tag"],"sourceRoot":""}