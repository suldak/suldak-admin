{"version":3,"file":"static/js/885.737e4107.chunk.js","mappings":"2MAgBMA,EAAeC,EAAAA,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yVACvB,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAM,OAAQA,GAAkB,aAAa,IASrC,SAACC,GACnB,OAAQA,EAAMC,aACZ,IAAK,UACH,OAAOD,EAAME,MAAMC,MACrB,IAAK,SACH,OAAOH,EAAME,MAAME,IACrB,IAAK,QACH,OAAOJ,EAAME,MAAMG,KACrB,QACE,OAAOL,EAAME,MAAMI,QAEzB,IAGsB,SAACN,GACnB,OAAQA,EAAMC,aACZ,IAAK,UACH,OAAOD,EAAME,MAAMK,WACrB,IAAK,SACH,OAAOP,EAAME,MAAMM,SACrB,IAAK,QACH,OAAOR,EAAME,MAAMO,UACrB,QACE,OAAOT,EAAME,MAAMQ,aAEzB,IAiBJ,IARe,SAAHC,GAA2D,IAArDC,EAAQD,EAARC,SAAUC,EAAUF,EAAVE,WAAYC,EAAKH,EAALG,MAAUd,GAAKe,EAAAA,EAAAA,GAAAJ,EAAAK,GACrD,OACEC,EAAAA,EAAAA,KAACxB,GAAYyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKlB,GAAK,IAAEC,YAAaY,EAAYd,OAAQe,EAAMF,SAC7DA,IAGP,C,g9lGC1CA,EAfiB,SAAHd,GAAmC,IAA7BgB,EAAKhB,EAALgB,MAAOK,EAAMrB,EAANqB,OACnBC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,eAAgB,CACdC,oBAAqB,mBAIzB,OACER,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,QAASP,EAAgBD,OAAQA,GAAkB,IAAKL,MAAOA,GAAgB,KAE3F,C","sources":["components/core/Button.tsx","components/core/NotFound.tsx"],"sourcesContent":["import styled from 'styled-components';\n\ninterface IProps {\n  onClick?: () => void;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  buttonType?: 'confirm' | 'cancel' | 'reset';\n  width?: string;\n}\n\ninterface IStyledProps {\n  $buttonType?: 'confirm' | 'cancel' | 'reset';\n  $width?: string;\n}\n\nconst StyledButton = styled.button<IStyledProps>`\n  width: ${({ $width }) => ($width ? $width : 'fit-content')};\n  border: none;\n  border-radius: 0.25rem;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1.5rem;\n  transition: background-color 0.2s;\n\n  background-color: ${(props) => {\n    switch (props.$buttonType) {\n      case 'confirm':\n        return props.theme.green;\n      case 'cancel':\n        return props.theme.red;\n      case 'reset':\n        return props.theme.gray;\n      default:\n        return props.theme.primary;\n    }\n  }};\n\n  &:hover {\n    background-color: ${(props) => {\n      switch (props.$buttonType) {\n        case 'confirm':\n          return props.theme.greenHover;\n        case 'cancel':\n          return props.theme.redHover;\n        case 'reset':\n          return props.theme.grayHover;\n        default:\n          return props.theme.primaryHover;\n      }\n    }};\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button = ({ children, buttonType, width, ...props }: IProps) => {\n  return (\n    <StyledButton {...props} $buttonType={buttonType} $width={width}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import Lottie from 'react-lottie';\nimport animationData from '@assets/404_error_lottie.json';\n\ninterface IProps {\n  width?: number;\n  height?: number;\n}\n\n/** 404 로티 애니메이션 */\nconst NotFound = ({ width, height }: IProps) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    renderSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return (\n    <Lottie options={defaultOptions} height={height ? height : 400} width={width ? width : 400} />\n  );\n};\n\nexport default NotFound;\n"],"names":["StyledButton","styled","button","_templateObject","_taggedTemplateLiteral","_ref","$width","props","$buttonType","theme","green","red","gray","primary","greenHover","redHover","grayHover","primaryHover","_ref2","children","buttonType","width","_objectWithoutProperties","_excluded","_jsx","_objectSpread","height","defaultOptions","loop","autoplay","animationData","renderSettings","preserveAspectRatio","Lottie","options"],"sourceRoot":""}